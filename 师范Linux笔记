Linux笔记
第一章：Linux系统安装
	1.软件及虚拟机尽量避免安装在C盘，避免中文路径
	2.自定义安装，本机使用建议单块硬盘，开机前编辑虚拟机设置添加光盘
	3.安装时，时区为东八区，软件管理选择Server with GUI，同时勾选右边的开发工具，关闭Kdump

	查看Linux系统内核信息与系统版本信息
		uname -a
	Linux虚拟机安装，1G-2G内存，20G-30G硬盘存储
	查看Linux系统版本详细信息 根号/
		cat /etc/redhat-release
			/etc/CentOS-release
			/etc/SuSE-release
			/etc/os-release
			find /etc -name *release
	查看Linux内存信息
		free -m
		内存总量total/已用量used/可用量free/进程共享的内存量shared/磁盘缓存的内存量buffers/缓存的内存量cached
		cat /proc/meminfo
	查看CPU信息
		cat /proc/cpuinfo flags
		lscpu
	查看硬盘设备信息
		fdisk -l
		df -Th
		cat /proc/partitions

	关闭防火墙
		systemctl stop firewalld（关闭运行中的防火墙）
		systemctl disable firewalld（开机防火墙服务禁止自启动）
		systemctl status firewalld（查看当前防火墙状态）
	开启防火墙
		systemctl start firewalld（开启运行中的防火墙）
		systemctl enable firewalld（开机防火墙服务自启动）

	关机
		systemctl poweroff   7-8 
		poweroff／init 0／shutdown／halt  2-6  7
	重启
		systemctl reboot    7-8
		reboot／init 6 		2-6   7

		kdump是一种基于kexec的内核崩溃转储技术。当系统崩溃时，kdump使用kexec启动到第二个内核，第二个内核通常叫做捕获内核，以很小内存启动以捕获转储镜像。第一个内核保留了内存的一部分给第二内核启动用，由于kdump利用kexec启动捕获内核，绕过了BIOS，所以第一个内核的内存得以保留，这是内核崩溃转储的本质。
		/etc/default/grub 修改文件中GRUB_CMDLINE_LINUX这行，可以设置kdump kernel的大小，一般都是128M或者256M “crashkernel=128M” 配置文件是/etc/kdump.conf 默认的vmcore文件存储在/var/crash目录下

第二章：目录文件结构与管理
	
	掌握常用目录的作用: 
		/bin：表示普通用户和系统用户 管理员都可以调用的指令（/usr/bin）
		/sbin：系统用户和管理员可以调用的指令（/usr/sbin）
		/boot：系统启动引导目录 内核文件（vmlinuz）和引导加载器（bootleader）
		/home：普通用户账户家目录的存放目录
		/root：超级用户的家目录
		/dev：存储设备文件及特殊文件
		/etc：系统启动，用户权限，应用程序等配置文件的主目录
		/lib：启动时程序依赖的基本共享库文件以及内核模块文件（/lib/modules)（/usr/lib）
		/lib64：X86_64系统上的辅助共享库文件存放位置（/usr/lib64）
		/media：RHEL6及之前的操作系统，外接设备默认存放路径 /media/kingston
		/run：RHEL7外接设备默认存放路径 /run/media/$username/kingston
		/mnt：临时文件系统挂载点 建议将磁盘设备挂载到当前目录的子目录中使用
		/proc：虚拟文件系统，输出内核与进程信息相关的虚拟文件系统，外部设备状态、网络状态等
		/sys: 虚拟文件系统，存储有关系统上内核相关信息
		/tmp：临时文件存放目录，主要针对普通用户
		/var/tmp：系统程序文件存放目录，主要针对系统用户
		/usr：用户自定义配置目录
		/var：业务数据存放目录，包括缓存、日志以及软件运行所产生的文件    

	安全基线
	命令 选项 参数
	ls   -l  /boot

	根据文件颜色识别文件属性
		蓝色 目录
		黑色 普通文件
		绿色 可执行文件
		红色 压缩文件
		紫色 图片或其他类型的文件
		浅蓝色 符号链接文件
		黑底黄字 设备文件
		灰色 其他文件

	ls	列出目录内容
	 	-l  以长格式形式查看文件或目录的详细信息（文件类型，权限，链接数，属主属组，文件大小，时间信息，文件名及路径）
	 	-h  以人性化方式计算文件或目录的大小（1024）
	 		--si 以1000为单位
	 		--block-size=M （K/M/G/T/P/E/Z/Y）以什么作为单位大小
	 	-d  查看
	 	目录本身的属性，不加时查看的是目录中的子目录及子文件
	 	-a  查看所有文件和目录（包含隐藏和非隐藏）
	 		-R  递归式的查询目录中的子目录及子文件
	 	-S  从大到小排序
	 	-d */ 只列出目录   （ls -d /boot/*/）
	 	-g/-G 不显示所有者（属主）/所属组信息
	 	--color=never 不显示颜色
	 	-r  显示默认排序的反转顺序
	 	-X（-sort=extension）扩展名排序，区分类型
	 	-t  通过修改时间列出（新文件在前）
	pwd 显示当前工作目录
	cd 切换工作目录
	 	cd ..  回到上一级目录（当前路径的父目录）
	 	cd -   回到上一次工作过的目录
	 	cd directory  切换到指定目录
	 		相对路径：只能在某个特定的环境或目录下才能执行的操作（不以“/”开始的路径）
	 		绝对路径：在任意位置都可调用并执行的操作（以“/”开始的路径）
	 	“.”     当前目录
 		“..”    上一级目录
	touch	创建文件，更新文件时间标记
		-a  仅修改“读取时间” atime
		-m  仅修改“修改时间” mtime
		-d  同时修改atime与mtime
 	mkdir	创建目录
 		-p  递归式创建目录及子目录（-v）
 	rm		删除文件
 		-r  递归式删除文件或目录
 		-f  强制删除
 		cp /boot/grub2/grub.cfg /tmp
 		shred /tmp/grub.cfg
 	rmdir	删除空目录
	mv		移动（mv 源文件路径 目标路径），为文件或目录重命名
		-b  若存在同名文件，覆盖前备份原来的文件
 		-f  强制覆盖同名文件
 	cp		拷贝 		cp 源文件 目标路径
 		cp时，如果目标路径没有指定，默认保存为源文件名称
 			如果在目标路径指定名称，则可以为复制文件重命名
 			同时复制多个文件时，重命名无效
 			复制目录可以使用“-r”选项，将目录复制到指定路径下
 		-b  若存在同名文件，覆盖前备份原来的文件
 		-f  强制覆盖同名文件
 		-p  保留原始文件的属性
 		-d  若对象为链接文件，则保留该文件的属性
 		-r  递归持续复制，用于目录
 		-i  若目标存在则询问是否覆盖
 		-a  相当于-pdr参数
 		-R  按递归方式保留原目录结构复制文件
 		    cp -b file1 file2      （yes）备份文件是在原名称之上加‘～’构成
 	cat		查看文件内容
 		-n  查看时显示行号
 		cat > file 创建文本文件（按Ctrl+d，在当前目录保存文件） 
 		cat file1 file2 > newfile（合并文件）
 	ln 		建立链接（默认建立为硬链接，-s选项表示创建软连接）
 		硬链接：源文件的副本，对于系统来说，文件始终是同一个文件
 			每创建一次，文件的链接数都会加一，文件的节点数始终不变
 			当用户对任意硬链接文件操作时，所有文件同时发生变化
 		软链接（符号链接）：源文件的快捷方式，此时创建的是新文件
 			软链接生成后，源文件链接数不会变化，文件将被分配一个新的节点数
 			当用户对软链接文件操作时，被链接的文件及硬链接文件会同时发生变化
 		硬链接有两点限制：
 			1.硬链接创建不可以跨文件系统
 			2.硬链接不可以为目录创建

第三章：常用指令与vim（vimsual interface improved）使用
	指令的分类：
	内部命令和外部指令
		内部指令：Shell自带的命令，比如cd、history，内部指令是不可删除的（系统默认解释器为bash）
		外部命令：一些软件安装后添加的命令，比如ls、cp，外部指令可根据安装包或指令的路径删除
	如何使用帮助：
		常见的指令帮助使用有man和help
		“man+指令”可以查看指令的帮助手册
			man 1 passwd
			man 5 passwd
		help的使用根据内部和外部，格式有差异
		内部指令：“help+内部指令”
		外部指令：“外部指令 -h或者--help”
			firefox file:///usr/share/doc
		关键字列表：man -k keyword
		显示说明：whatis command
		type

		查看帮助时
			1.有‘+’表示需要加上才格式正确 空格属于特殊符号 需要单引标注
			2.有大写字母 表示必选项 否则无法执行

			[] 可选项
			... 列表    date +'%Y-%m-%d %H:%M:%S'
			LOGIN 必选项
			a|b|c 三选一
	
	shell：终端内的指令‘翻译器’
	bash：shell解释器的版本，除此之外，还有csh，tcsh，zsh等
	终端：在图形化（或命令行）的Linux配置中，给用户提供指令输入的编辑器

	more	分页查看文件内容（可以查看二进制文件）
		空格（或Enter）向下翻页，b向上翻页，按q结束浏览
		-p  显示下一屏之前先清屏
		-s  文件中连续的空白行压缩成一个空白行显示
	less	逐行查看文件内容	（可以查看ASCII文件）
		空格翻页查看，‘／+关键词’可以搜索，‘n’向下查找关键词‘N’向上查找关键词，按q结束浏览
	head	查看文件头10行（默认）
		head -n number file（head -number file）
	tail	查看文件后10行（默认）
		tail -n number file（tail -number file）
		+n  从第几行以后开始显示
	tac     与cat相同，但反向显示文件
	grep	过滤文件内容
		-v  取反
		-n  显示关键词在文件中的行数
		-i  搜索时忽略被搜索词的大小写
		-AX X为数字，表示搜索时同时显示关键词后X行
		-BX X为数字，表示搜索时同时显示关键词前X行
		-c  只显示匹配行的数量
	du		统计目录内容大小
		-s  显示汇总信息
		-h  以人性化方式显示大小
	wc		统计文件内容
		默认显示信息，依次为行数，关键词数，文件大小
		-l  统计行数
		-c  统计字节数
		-w  统计字数
 	alias	命令别名建立，格式为：新指令=‘原指令 + 选项’
 		建立时有三种方式
 		1.在当前终端新建别名，只有当前终端生效，其他终端不生效，同时退出终端后失效
 		2.在当前用户的家目录中，找到隐藏文件bashrc(~/.bashrc)，在文件中添加alias，再次登陆生效，针对的是当前用户  source ～/.bashrc
 		3.在/etc/bashrc文件中，添加alias，全局生效，所有登陆用户都可调用
 		alias simple=‘ls -lh /boot’
 			unalias 移除别名（-a）
	find	按照指定条件实时查找
		根据文件名查找
			find /etc -name passwd
		根据文件类型查找（普通文件f、目录d、块设备b、字符设备c等）
			find /etc -type f
		根据文件大小查找
			find /etc -size -1k
			find /etc -size +102400 -a -size -204800
				(-a 两个条件同时满足 -o 两个条件满足任意一个即可)
		因为find对管道支持比较弱，所以可以借助exec扩展选项（exec后面添加进一步处理的结果）
			find /etc -size +1M -exec ls -lh {} \;
			注：‘-’表示小于，‘+’表示大于，-exec通常需要和‘空格\;’一起使用，格式不完整，则指令不可正确执行
		-perm  匹配权限（/number表示匹配数字至少符合其中一位，-number表示三个数字都需要符合要求）
		-user  匹配所有者/（-uid）
		-group 匹配所有组/（-gid）
		-not -user 匹配非所有者文件
		-not -group 匹配非所有组文件
		-type b/d/c/p/l/	 匹配文件类型 块设备、目录、字符设备、管道、链接文件、文本文件
		转义符
		-cmin -5 匹配查找5分钟内被修改过属性的所有文件和目录（分钟/+多少之前/-不到以内）
		     -amin 访问时间 access
			 -cmin 文件属性 change
			 -mmin 文件内容 modify
	locate 	 根据locate数据库中的文件名或路径返回搜索结果
		-i 	 忽略大小写
		updatedb

	whereis 尝试在标准Linux位置以及$PATH和$MANPATH指定的位置找到所需的程序及文件
	which	搜索变量$PATH中列出的所有路径并返回命令的完整路径

	zip(-r) unzip rar unrar 
	gzip 与 bzip2	压缩文件
 		压缩时，默认压缩比为6，压缩区间为1-9，9为最高压缩比
 		解压缩时，对应指令为gunzip，bunzip2
 	file 查看文件类型
 	dd	 按照指定大小和个数的数据块复制文件或转换文件（备份、复制，逐块复制文件，用于创建磁盘或分区映像）
 		dd if=/dev/zero of=testfile bs=1M count=100生成100M的文件
 		dd if=/dev/sda of=/tmp/mbr.hex bs=512 count=1
 		除了制作文件，还可以把光驱设备中的光盘制作成iso格式的镜像文件，Windows中需要借助第三方才可实现
 		dd if=/dev/cdrom of=RHEL-server-7.0-x86_64-dvd.iso

 	tar		目录打包备份
 		-c  创建打包压缩的文件
 		-f  将指定的文件或目录打包为文件
 		-v  显示压缩或解压缩的进度
 		-j  bzip2格式的文件压缩
 		-z  gzip格式的文件压缩
 		-J  xz格式的文件压缩
 		-C  解压缩时指定解压路径，默认为当前目录
 		-x  解压缩文件
 		-t  查看压缩包内有哪些文件（with f）
 		-p  保留原始的权限与属性
 		-P  使用绝对路径来压缩

 	history  查看shell命令的历史记录
 		-r  读出命令历史列表文件（～/.bash_history）的内容，并将它们当作当前的命令历史列表加到内存中命令历史记录的后面
 		-w  将当前命令历史记录写入文件（～/.bash_history），并覆盖文件原来的内容
 		-a  将当前的命令历史追加到文件（～/.bash_history）尾部
 		-n [文件名] 读取文件内容，并加入到当前历史命令列表中，如果未制定文件名，history将用变量histfile的值来代替
 		-c  清空命令历史记录，清理内存中的历史记录，在.bash_history中的记录不会被清除
 		-d n 用于删除使用history查询的内存中的命令历史中指定的第n个命令，也就是说删除的是内存中的命令历史，与bash_history 文件无关
 		#配置HISTTIMEFORMAT环境变量，给history记录添加上时间戳
			export HISTTIMEFORMAT="%F %T "  #配置HISTTIMEFORMAT环境变量，给history记录添加上时间戳
			source .bashrc   使其生效
 	
 	VIM编辑器使用   nano
		Vim编辑器的三种工作模式：
		命令模式（默认模式）：复制，粘贴，剪切，切换到其他模式
		输入模式（编辑模式）：a\i\o，针对每个字符进行编辑，删除
		末行模式（扩展模式）：保存，退出，保存并退出，字符替换等
		光标方向移动

	命令模式：
		向下翻页：Page Down或Ctrl+F
		向上翻页：Page Up或Ctrl+B
		行内快速跳转
		跳转至行首：Home键或者“^”、数字“0”
		跳转到行尾：End键或“$”键
		行间快速跳转
		跳转到文件首行：1G或者gg
		跳转到文件末行：G
			#G 其中#代表数字，#G表示跳转到文件中的第#行
		直接输入数字+回车
			表示从当前行开始计算，跳到文件位置的累加行
		操作类型

		剪切（删除）
		删除当前光标处单个字符：x或者Del
		剪切当前行：dd
		剪切从光标处开始的#行内容：#dd #表数字
		删除当前光标前到行首所有内容：d^
		删除当前光标到行尾所有内容：d$
		
		复制
		复制当前行：yy
		复制从光标开始处的#行内容：#yy
		
		粘贴
		粘贴到当前行下：p
		粘贴到当前行上：P
		
		撤销
		取消最近一次操作：u
		反撤销：ctrl+r
		
		查找
		从上而下在文件中查找字符串“word”：/word
		从下而上在文件中查找字符串“word”：?word
		定位下一个匹配的被查找字符串：n
		定位上一个匹配的被查找字符串：N

		保存
		保存并退出当前编辑：ZZ
		shift+‘；’   ：set number

	输入模式：
		a：在当前光标所在位置的后面输入字符
		i：在当前光标所在位置的前面输入字符
		o：在当前光标所在位置的下面重新开启一行输入字符
		A：跳转到当前光标所在行行尾输入字符
		I：跳转到当前光标所在行行首输入字符
		O：在当前光标所在位置的上面重新开启一行输入字符
		s：删除光标后的一个字符，然后进入输入模式
		S：删除光标所在的行，然后进入输入模式

	末行模式
		显示行号
		:set nu
		取消显示行号
		:set nonu
		  
		保存
		保存修改内容：‘:w’
		另存为：‘	:w /路径/文件’
		未修改退出：‘:q’
		放弃修改强制退出：‘:q!’
		保存并退出：‘:wq’

		打开新文件编辑
		:e /路径/文件
		读入文件内容到当前编辑
		:r /路径/文件 
		将当前行中查找到的第一个字符“old” 替换为“new”
		:s/old/new 
		将当前行中查找到的所有字符串“old” 替换为“new”
		:s/old/new/g
		在行号“#,#”范围内替换所有的字符串“old”为“new”
		:#,#s/old/new/g
		在整个文件范围内替换所有的字符串“old”为“new”
		:%s/old/new/g 

 第四章：账号与权限管理
	用户账户分类
	超级用户：UID=0（GID的分类和GID规律与UID一致）
	程序用户：RHEL5/6，UID=1-499；RHEL7，UID=1-999（1-200系统）
	普通用户：RHEL5/6，UID=500-65535；RHEL7，UID=1000-60000

	passwd文件(vipw)
	simplexue:x:500:500:www.simplexue.com:/home/simplexue:/bin/bash
	字段1：用户名
	字段2：密码占位符
	字段3：uid
	字段4：gid
	字段5：用户描述信息
	字段6：家目录
	字段7：登录shell（用户登陆shell为/bin/bash表示当前用户可以登陆，/sbin/nologin表示当前用户不被授权登陆）

	shadow文件
	字段1：用户名
	字段2：通过sha-512加密过得密码
	字段3：最后一次修改密码距离1970年1月1日的天数间隔，密码开头为叹号时，表示密码锁定
	字段4：密码最短有效期
	字段5：密码最长有效期
	字段6：密码过期前7天警告
	字段7：账户过期后，被锁定的天数
	字段8：账号失效时间距离1970年1月1日的天数间隔
	字段9：未分配功能
		date +%s
		echo $(($(date +%s)/86400))

	group文件(vigr)
	字段1：组名称
	字段2：组密码占位符
	字段3：GID
	字段4：组成员

	用户与组管理
	whoami	显示当前shell用户
	id		默认显示当前用户信息，加user后显示对应用户信息
	groups  默认显示当前组信息，加user后显示对应用户组信息
		finger	显示当前用户的详细信息
	ac      显示用户在线时间的统计信息
	lastlog 显示最后登录用户的用户名、登录端口和登录时间
	lastb   显示登录系统失败用户的相关信息
	useradd username
		1.新建用户时，系统会将/etc/skel中的目录及文件拷贝到新建用户的家目录中
		2.在/var/spool/mail中，新建用户名的邮箱
		3.在passwd、shadow和group文件中，增加用户信息
	userdel [-r] username
		不加-r选项，只删除passwd和shadow文件中的用户信息
		加-r选项，删除passwd和shadow文件中的用户信息，同时删除用户的家目录和邮箱

	usermod
		对已存在的账户做属性修改
		-s 修改用户的登陆shell
		-L 账户锁定
		-U 解锁账户

	passwd  
		用来更改使用者的密码
		-d 删除密码，使账号无口令
		-f 强迫用户下次登录时必须修改口令
		-w 口令要到期提前警告的天数
		-l 停止账号使用
		-S 显示密码信息
		-u 启用已被停止的账户
		-x 指定口令最长存活期
		-g 修改群组密码
		-i 口令过期后多少天停用账户
		passwd密码修改
			root：
			1.不需要知道当前的密码
			2.设置新密码时，不需要遵循密码要求（1.不能少于8个字符，2.满足复杂度要求）
			普通用户：
			1.需要知道当前用户密码
			2.设置新密码时，必须遵循密码要求

		安全信息泄漏
			useradd/userdel/useradd find / -nouser -o -nogroup

	groupadd
		增加新组，组创建时可以指定组的GID等属性
	groupmod
		修改已创建组的属性，比如名称，GID等
	groupdel
		删除组，但是只能针对附加组，主组无法删除

	cut 主要用于按“列”提取文本字符
		-f 设置需要查看的列数
		-d 设置间隔符号

		用户创建时，默认的属性（比如UID，GID，是否创建家目录，创建邮箱等）都是通过/etc/login.defs文件控制的，修改此文件的属性，会影响以后创建的所有用户
		如果需要对现存账户的属性做修改，可以借助chage指令，修改用户的密码策略，也可通过编辑/etc/shadow[ 文件修改（不推荐）]

	chage
		口令时效修改
		-m days 指定用户必须改变口令所间隔的最少天数。如果值为0，口令就不会过期。
		-M days 指定口令有效的最多天数。当该选项指定的天数加上-d选项指定的天数小于当前的日期时，用户在使用该帐号前就必须改变口令。
		-d days 指定从1970年1月1日起，口令被改变的天数（chage -d 0 usernam 强制下次登录时更新密码）
		-I days 指定口令过期后，帐号被锁前不活跃的天数。如果值为0，帐号在口令过期后就不会被锁。
		-E date 指定帐号被锁的日期（将在指定日期到期）日期格式YYYY-MM-DD。若不用日期，也可以使用自1970年1月1日后经过的天数。
		-W days 指定口令过期前要警告用户的天数。
		-l： 列出指定用户当前的口令时效信息，以确定帐号何时过期
		比如：chage -l username   查看用户的密码策略
			 chage -M 90 username    将用户的密码有效期修改为90天
			 chage -m 2 -M 30 -W 5 username    两天内不能更改口令，口令最长的有效期为30天，过期前5天通知用户
			 chage -d 0 username   强制所有用户下次登录修改密码

	文件属性分为11个字段
		第一字段为文件属性
		第二至四字段为属主权限
		第五至七字段为属组权限
		第八至十字段为其他用户权限
		第十一个字段为扩展属性，‘.’表示没有扩展属性，‘+’表示有设置ACL扩展属性
		文件属性中，‘-’表示文件，‘d’表示目录，‘l’表示符号链接，‘b’表示块设备，‘c’表示特殊字符设备

	文件和目录的权限为rwx
		针对文件：
		r表示可以打开和读取文件
		w表示可以对文件内容写入修改（但不能删除）
		x表示文件可执行
		针对目录：
		r表示可以列出目录内容（文件名）
		w表示可以在目录中增删改查（即删除文件）
		x表示可以进入目录，同时可以查看目录中文件的详细信息

		rwx对应的数字为421，所以文件或目录的最大权限为777
		修改文件权限的指令为chmod
			u表示user，属主权限位
			g表示group，属组权限位
			o表示other，其他用户权限位
			a表示所有，等于ugo
		所以设置权限时，可以使用chmod ugo（a） +／- rwx
			比如：chmod u-r file／chmod a+x file等
			也可使用数字代表权限，对应的三个数字即为属主、属组、其他用户
			比如：chmod 640 file   rw-r-----

		修改文件的属主属组，可以使用chown和chgrp指令
			chown即可单独修改属主，也可单独修改属组，也能同时修改属主属组
			chgrp只能修改属组
			chown 属主:属组 file／directory
			chown 属主.属组 file／directory
			chgrp 属组 file／directory

	user->（user acl）group-> (group acl) other
	扩展权限控制
		因为默认的属主属组只能控制一个用户和一个组，无法针对每个用户、每个组做权限控制，所以借助acl属性，完善权限控制
		setfacl 设置某个文件或者目录的ACL属性（rwx和rwX）
			 -m 设置acl，针对用户，关键词为‘u’，针对组，关键词为‘g’，设置时，权限不能为空
			 -x 删除设置的acl属性
			 -d 只针对目录设置默认的acl参数
			 -b 删除所有的acl属性
			 -k 删除默认的acl参数
		getfacl 获取某个文件或者目录的ACL属性
			 -a 显示文件acl属性
			 -d 显示默认的acl属性
			 -R 查询递归的acl属性
			setfacl -m u:tom:rw- /file
			setfacl -m u:jerry:- /file
			setfacl -m g:IT:rw- /file
			getfacl /file 
		移除权限（-x移除acl，移除权限时，无需指定权限，针对用户或组即可）
			setfacl -x u:jerry /file

		SUID：针对特殊指令，做提权，不建议随意更改默认指令属性，执行者对该程序需有x可执行权限
			chmod u+s 指令后，表示用户在使用指令时，借助的是管理员的身份
			chmod 4755
		SGID：主要针对目录（文件亦可），对项目开发非常重要，同组成员可以互相编辑文件
			chmod g+s 目录后，组成员创建的文件或目录，属主为自己，属组自动继承父目录
			chmod 2770
		粘滞位：只针对目录生效，面向other用户，彼此可以看到创建的文件，但是不可以修改删除
			chmod o+t 目录后，所有的other用户在目录中都拥有对自己文件的完全控制权限
			chmod 1777

			SGID扩展
				只有可执行的二进制程序才能设置SGID权限 
				命令执行者要对该程序拥有x（执行）权限 
				命令执行在执行程序的时候，组身份升级为该 程序文件的属组 
				SetGID权限同样只在该程序执行过程中有效，也就是说组身份改变只在程序执行过程中有效
				ll /usr/bin/locate
				ll /var/lib/mlocate/mlocate.db
				/usr/bin/locate是可执行二进制程序，可以赋予 SGID
				执行用户对/usr/bin/locate命令拥有执行权限 
				执行/usr/bin/locate命令时，组身份会升级为slocate 组，而slocate组对/var/lib/mlocate/mlocate.db数据 库拥有r权限，所以普通用户可以使用locate命令 查询mlocate.db数据库

		umask 指定当前用户在建立文件或者目录的权限默认值
			-S 以符号类型的方式显示出权限
	
		777(rwxrwxrwx)
		root
		dir=755=777-022
		file=644=777-022-111
		users
		dir=775=777-002
		file=664=777-002-111
			
		echo 用于在终端输出字符串或变量提取后的值
	 	stat 查看文件的具体存储信息和时间信息等
	 		https://sysin.org/blog/how-to-change-file-date/

	 	su - Switch user/切换用户（default root） ，根密码需要身份验证，整个shell及其子进程都以特权身份运行
			不要频繁切换(pstree) 也不要关闭终端（.swap）
			su - root -c "useradd test" 不切换但是执行指令
	 	sudo - 用户密码需要身份验证，所有应用以特权身份运行
		sudo （which command > 绝对路径   visudo=vim /etc/sudoers）
			user1  ALL=(ALL) /sbin/useradd,/bin/passwd
	 		Configuration file: /etc/sudoers 
	 		Configuration tool: visudo
	 		 User Example: /用户示例
			 simple ALL=(ALL) /sbin/shutdown
				 sudo -u sshd touch /tmp/sshd
			 simple ALL=(root) NOPASSWD:/sbin/shutdown
			 simple ALL=(root) ALL,!/bin/passwd,!/bin/passwd [A-Za-z]*,!/bin/passwd root
			 Group Example: /用户示例
			 %admins ALL=(ALL) /sbin/shutdown